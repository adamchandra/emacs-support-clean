import sbt._
import Keys._
import PlayProject._
import com.typesafe.startscript.StartScriptPlugin


object Build extends sbt.Build {
  import Dependencies._
  import CommonHelpers._

  val unpublished = Seq(
    // no artifacts in this project
    publishArtifact := false,
    // make-pom has a more specific publishArtifact setting already
    // so needs specific override
    publishArtifact in makePom := false,
    // can't seem to get rid of ivy files except by no-op'ing the entire publish task
    publish := {},
    publishLocal := {}
  )

  def subproject(name:String) = (
    Project(name, file("prj-"+name))
    .settings(Settings.scalac:_*)
    .settings(Settings.publication:_*)
    //.settings(assemblySettings:_*)
    .settings(StartScriptPlugin.startScriptForJarSettings:_*)
  );



  def playSubproject(id:String, org:String, ver:String, lang:String=SCALA) = {
    val devProject = (
      PlayProject(id, ver, 
                  path = file("prj-web-dev-"+id), 
                  mainLang = lang) 
      .settings(
        organization  := org,
        resolvers ++= Dependencies.resolutionRepos,
        ebeanEnabled := true
      )
      .settings(Settings.publication:_*)
    );
    
    val depProject = (
      devProject
        .settings(unpublished:_*)
        .settings(
          name := "prj-web-dep-"+id,
          baseDirectory := file("prj-web-dep-"+name),
          libraryDependencies ++= Seq(org %% id % ver)
        ) dependsOn (
          devProject
        ));
    // (devProject, depProject)
    devProject
  }


  // startScriptForClassesSettings 
  // startScriptForJarSettings 
  // startScriptForWarSettings (the script will run a .war with Jetty)


  lazy val rexaCommons = (
    subproject("rexa-commons")
    .settings(
      organization  := "cc.rexa2",
      version       := "0.1-SNAPSHOT",
      (libraryDependencies ++=
       Dep.scalaIO ++
       Seq(
         Dep.specs2,
         Dep.scalazCore,
         Dep.subcut,
         Dep.jdom,
         Dep.typesafeConfig,
         Dep.slf4s,
         Container.logbackClassic
       ))
    )
  );

  //lazy val giraphe = (
  //  subproject("giraphe")
  //  .settings(unpublished:_*)
  //  .settings(
  //    organization  := "cc.rexa2",
  //    version       := "0.1-SNAPSHOT",
  //    (libraryDependencies ++= 
  //     Seq(
  //       Dep.akkaActor,
  //       Dep.commonsIo    ,
  //       Dep.dispatchCore ,
  //       Dep.dispatchHttp ,
  //       Dep.jdom         ,
  //       Dep.jettison     ,
  //       Dep.neo4j        ,
  //       Dep.scalazCore   ,
  //       Dep.sprayJson,
  //       Dep.sprayServer,
  //       Container.servletApi,
  //       Dep.specs2
  //     )))
  //) dependsOn (
  //  rexaCommons % "test->test;compile->compile"
  //);



  lazy val camelCommons = (
    subproject("camel-commons")
    .settings(
      organization  := "cc.rexa2",
      version       := "0.1-SNAPSHOT",
      (libraryDependencies ++= 
       Dep.camel("core,scala,test,jms,jetty,http,spring,stream,exec,jsch".split(",").toSeq:_*) ++ 
       Seq(
         Dep.jaxbImpl,
         Dep.junit4, Dep.junit4Runner,
         Dep.activeMQ, Dep.activeMQCamel, Dep.activeMQPool,
         Dep.scalateCamel,
         Dep.liftJson,
         Dep.xbeanSpring,
         Dep.scalatest,
         Dep.specs2
       )))
  ) dependsOn (
    rexaCommons // % "test->test;compile->compile"
  );


  //lazy val scrapers = (
  //  subproject("scrapers")
  //  .settings(unpublished:_*)
  //  .settings(
  //    organization  := "cc.rexa2",
  //    version       := "0.1-SNAPSHOT",
  //    initialCommands := {
  //      """
  //      import cc.rexa2.scrape._
  //      """
  //    },
  //    (libraryDependencies ++= 
  //     Dep.camel("mongodb".split(",").toSeq:_*) ++ 
  //     Seq(
  //       Dep.neo4j,
  //       Container.logbackClassic,
  //       Dep.tagsoup,
  //       Dep.html5parser  
  //     )))
  //) dependsOn (
  //  rexaCommons % "test->test;compile->compile",
  //  camelCommons % "test->test;compile->compile", 
  //  giraphe % "test->test;compile->compile"
  //);


  lazy val rexaRoutes = (
    subproject("rexa-routes")
    .settings(net.virtualvoid.sbt.graph.Plugin.graphSettings: _*)
    .settings(
      organization  := "cc.rexa2",
      version       := "0.1-SNAPSHOT",
      (libraryDependencies ++= 
       Dep.camel("mongodb".split(",").toSeq:_*) ++ 
       Seq(
         Dep.specs2,
         Dep.jaxbImpl,
         Container.logbackClassic
       )))
  ) dependsOn (
    camelCommons // % "test->test;compile->compile",
    // rexaCommons // % "test->test;compile->compile"
  );

  lazy val rexaRoutesDep = (
    subproject("rexa-routes-dep")
    .settings(unpublished:_*)
    .settings(
      organization  := "cc.rexa2",
      version       := "0.1-SNAPSHOT",
      libraryDependencies := Seq("cc.rexa2" %% "rexa-routes" % "0.1-SNAPSHOT")
    ))


    lazy val rexa2Core = (
      subproject("rexa2-core")
      .settings(
        organization  := "cc.rexa2",
        version       := "0.1-SNAPSHOT",
        (libraryDependencies ++= Dep.casbahLibs ++
         Dep.camel("core,exec,scala,solr,lucene,test,jms".split(",").toSeq:_*) ++ // Dep.camel("core,context,exec,lucene,solr,scalate") ++
         Seq(
           Dep.apache.commons.lang3,
           Dep.apache.commons.email,
           Dep.activeMQ, Dep.activeMQCamel, Dep.activeMQPool,
           Dep.unfiltered, Dep.unfilteredScalatest, Dep.unfilteredSpec, Dep.unfilteredNetty, Dep.unfilteredUploads,
           Dep.dispatchCore, Dep.dispatchHttp, Dep.dispatchMime, Dep.dispatchJson,
           Dep.mongodb,
           Dep.redstoneXMLRPC,
           Dep.scalateCore,
           Dep.liftJson, Dep.liftWebkit,
           Dep.scalazCore,
				   Dep.commonsIo,
           Dep.slf4j,
				   Container.servletApi,
           Dep.scalatest,
           Dep.specs2,
           // Dep.jerkson,
           Dep.jdom
         )))
    ) dependsOn (
      camelCommons % "test->test;compile->compile",
      rexaCommons % "test->test;compile->compile"
    );


    lazy val rexaAuth = (
      subproject("rexa-auth")
      .settings(
        resolvers += "jBCrypt Repository" at "http://repo1.maven.org/maven2/org/"
      )
      .settings(
        organization  := "cc.rexa2",
        version       := "0.1-SNAPSHOT",
        (libraryDependencies ++= Seq(
          "org.apache.httpcomponents" % "httpclient" % "4.2",
          // "com.feth" %% "play-easymail" % "0.1-SNAPSHOT",
          "org.mindrot" % "jbcrypt" % "0.3m",
          "commons-lang" % "commons-lang" % "2.6",
       	  "com.typesafe" %% "play-plugins-mailer" % "2.0.3-08072012"
        )))
    );

//  lazy val rexaScalaAuth = (
//    subproject("rexa-scala-auth")
//      .settings(
//        resolvers += "jBCrypt Repository" at "http://repo1.maven.org/maven2/org/"
//      )
//        .settings(
//          organization  := "cc.rexa2",
//          version       := "0.1-SNAPSHOT",
//          (libraryDependencies ++= Seq(
//            "org.apache.httpcomponents" % "httpclient" % "4.2",
//            // "com.feth" %% "play-easymail" % "0.1-SNAPSHOT",
//            "org.mindrot" % "jbcrypt" % "0.3m",
//            "commons-lang" % "commons-lang" % "2.6",
//       	    "com.typesafe" %% "play-plugins-mailer" % "2.0.3-08072012"
//          )))
//  );


  lazy val rexaAuthKickstart = (
    playSubproject(
      "rexa-auth-kickstart", "cc.rexa2", "0.1-SNAPSHOT", JAVA
    )
      .settings(
        libraryDependencies ++= Seq(
          "be.objectify"  %   "deadbolt-2_2.9.1"        % "1.1.2"
          // "play-authenticate" %% "play-authenticate" % "0.2.0-SNAPSHOT"
        ))
  ) dependsOn (
    rexaAuth
  );


//   .settings(
//     publishArtifact in (Compile, packageDoc) := false
//   )


  // lazy val secureSocial = (
  //   playSubproject(
  //     "securesocial", "cc.rexa2", "0.1-SNAPSHOT"
  //   )
  //   .settings(
  //     libraryDependencies ++= Seq(
  //       "com.typesafe" %% "play-plugins-util" % "2.0.3-08072012",
  //       "org.mindrot" % "jbcrypt" % "0.3m"
  //     ))
  // );

  lazy val rexa2Front = (
    playSubproject(
      "rexa2-front", "cc.rexa2", "0.1-SNAPSHOT"
    )
    .settings(
      libraryDependencies ++= Seq(
        "be.objectify"  %   "deadbolt-2_2.9.1"        % "1.1.2", 
        // Dep.scalateJRebel,
        Dep.jasypt,
        Dep.specs2
      ))
  ) dependsOn (
    //secureSocial,
    rexaAuth,
    rexa2Core
    // rexaCommons,
  );

//   val rexa2Front = (
//     PlayProject("rexa2-front", "0.1-SNAPSHOT", 
//                 path = file("prj-rexa2-front"), 
//                 mainLang = SCALA) 
//     .settings(
//       organization  := "cc.rexa2",
//       resolvers ++= Dependencies.resolutionRepos
//     )
//     .settings(Settings.publication:_*)
//     .settings(ebeanEnabled := true)
//     .settings(
//       (libraryDependencies ++= 
//        Seq(
//          "be.objectify"  %   "deadbolt-2_2.9.1"        % "1.1.2", 
//          Dep.jasypt,
//          Dep.specs2
//        )))
//   ) dependsOn (
//     secureSocial,
//     rexaCommons,
//     rexa2Core
//   );


//   val rexa2FrontDeploy = (
//     PlayProject("rexa2-front-dep", "0.1-SNAPSHOT", 
//                 path = file("prj-rexa2-front-dep"), 
//                 mainLang = SCALA) 
//     .settings(
//       resolvers ++= Dependencies.resolutionRepos
//     )
//     .settings(ebeanEnabled := true)
//     .settings(unpublished:_*)
//     .settings(
//       (libraryDependencies ++= 
//        Seq(
//          // "cc.rexa2" %% "rexa-auth-kickstart" % "0.1-SNAPSHOT",
//          "cc.rexa2" %% "rexa-commons" % "0.1-SNAPSHOT",
//          "cc.rexa2" %% "rexa2-core" % "0.1-SNAPSHOT",
//          "cc.rexa2" %% "rexa2-front" % "0.1-SNAPSHOT"
//        )))
//   ) 



  val all = (
    Project("all", file(".")) 
    .settings(unpublished:_*)
    aggregate(rexa2Front, rexa2Core, rexaRoutes, rexaCommons, camelCommons))

}


//   val rexaUserbase = (
//     PlayProject("rexa-userbase","0.1-SNAPSHOT", 
//                 path = file("prj-rexa-userbase"), 
//                 mainLang = SCALA)
//     .settings(ebeanEnabled := true)
//     .settings(
//       resolvers ++= Dependencies.resolutionRepos
//     )
//     .settings(unpublished:_*)
//     .settings(
//       (libraryDependencies ++= 
//        Seq(
//          "be.objectify"  %   "deadbolt-2_2.9.1"        % "1.1.2",
//          "play-authenticate" %% "play-authenticate" % "0.2.0-SNAPSHOT"
//          // "be.objectify"  %   "deadbolt-2_2.9.1"        % "1.1.3-SNAPSHOT"
//        ))
//     )
//   )
