* [[file:./daily-practice.org][Daily Practice]]

*** Briefly review these notes
    [[file:./daily-practice.org][Time well spent?]]

*** Decide whether to use a timer for the day 

*** Understand one new (small) programming concept from this list
    [[file:writing.org::*Programming%20concepts][Programming concepts]]

*** Write at least one explanatory paragraph per week, on some programming topic
    [[file:./writing.org][Writing]]


* Conference organization
  - ability to share 'dogears', bookmarks, reading paths
  - collaborative reading
  - scenario:
    I sift through a series of papers, pdfs, web pages, discussion boards, etc,
    and as I do so, a history of my browsing is recorded. I am able to broadcast my
    activity, or selective parts thereof, as a series of waypoints (represented as
    flags or pins on the relevent resources). People can subscribe to my activity,
    follow along, diverge from my path and rejoin later.



[10] A. Gal.Efﬁcient Bytecode Veriﬁcation and Compilation in a VirtualMachine Dissertation. PhD
     thesis, University Of California, Irvine,2006.

[11] A. Gal, C. W. Probst, and M. Franz. HotpathVM: An effective JITcompiler for
     resource-constrained devices. InProceedings of theInternational Conference on Virtual Execution
     Environments, pages144–153. ACM Press, 2006.

[12] C. Garrett, J. Dean, D. Grove, and C. Chambers. Measurement andApplication of Dynamic Receiver
     Class Distributions. 1994.

[13] J. Ha, M. R. Haghighat, S. Cong, and K. S. McKinley. A concurrenttrace-based just-in-time
     compiler for javascript. Dept.of ComputerSciences, The University of Texas at Austin,
     TR-09-06, 2009.

[14] B. McCloskey. Personal communication.

[15] I.PiumartaandF.Riccardi. Optimizingdirectthreadedcodebyselec-tive inlining. InProceedings of
     the ACM SIGPLAN 1998 conferenceon Programming language design and implementation, pages 291–300. ACM
     New York, NY, USA, 1998.

[16] A. Rigo. Representation-Based Just-In-time Specialization and thePsyco Prototype for
     Python. InPEPM, 2004.

[17] M. Salib. Starkiller: A Static Type Inferencer and Compiler forPython. InMaster’s Thesis, 2004.

[18] T. Suganuma, T. Yasue, and T. Nakatani. A Region-Based Compila-tion Technique for Dynamic
     Compilers.ACM Transactions on Pro-gramming Languages and Systems (TOPLAS), 28(1):134–174, 2006.

[19] M. Zaleski, A. D. Brown, and K. Stoodley. YETI: A graduallYExtensible Trace
     Interpreter. InProceedings of the InternationalConference on Virtual Execution Environments, pages
     83–93. ACMPress, 2007






