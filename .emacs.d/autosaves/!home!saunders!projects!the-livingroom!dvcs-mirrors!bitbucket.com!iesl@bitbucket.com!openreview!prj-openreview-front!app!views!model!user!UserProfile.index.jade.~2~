
-@ val authProviders: Iterable[securesocial.core.IdentityProvider]
-@ val message: Option[String] = None
-@ val it : model.user.UserProfile


.row-fluid
  .span12
    | Updated
    .profile.user-emails(data-refresh-url={"/user/emails"})
      .row-fluid
        h4
          = it.fullname
          = request.flash.get("error").getOrElse(message.getOrElse(""))
    
      .row-fluid
        .emails
          h5
            - it.primaryEmail.map(email=>
              | Contact at: #{email.email}
            - ).getOrElse(
              | No verified contact email
            - )
      
          ul.h-indent-ul
            li 
              h5 Additional emails
            - for (email <- it.nonPrimaryEmails; val encEmail = URLEncoder.encode(email.email, "UTF-8"))
              li
                ul.inline-ul
                  li
                    = email.email
      
                    - if (!email.verified)
                      li
                        a.ajax(
                          href={"/user/email/verify/"+encEmail}
                          data-replace={".user-emails"})
                          | Verify 
                      li
                        a.ajax(
                          href={"/user/email/remove/"+encEmail}
                          data-replace={".user-emails"})
                          | Remove
                    - else
                      li
                        a.ajax(
                          href={"/user/email/setprimary/"+encEmail}
                          data-replace={".user-emails"})
                          | Set as primary contact
                      li
                        a.ajax(
                          href={"/user/email/verify/"+encEmail}
                          data-replace={".user-emails"})
                          | Reverify 
      
            li 
              form.ajax.form-horizontal(action="/user/email/add" method="POST" data-replace={".user-emails"})
                input(name="email" type="text" placeholder="Add email")
