#!/bin/bash

BIN="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $BIN/common-defs.sh

cd $workdir

for f in run-pstotext.*
do
  cat <<'EOF' > "sge-$f.sh"
#!/bin/bash

# --- interpreter
#$ -S /bin/sh
#
# --- run from current dir
#$ -cwd
#
# --- job name
#$ -N rexa.pstotext
#
# --- stdio redirection
# $ -e /dev/null
# $ -o /dev/null
#
# --- merge stdout/stderr?
#$ -j y
#
# --- pass on entire env
#$ -V
EOF

  cat <<EOF >> "sge-$f.sh"
# need to get the actual location of bin dirs from config file (or rely on convention)
declare -r totext="$pstotext_bin/totext"
EOF

  cat <<'EOF' >> "sge-$f.sh"
run_pstotext () {
    local pdfFile="$1"
    local path=$(dirname "$pdfFile")
    local filename=$(basename "$pdfFile")
    local artifactdir="${path}/${filename}.d/pstotext"

    # echo "file                   = $pdfFile"
    # echo "output dir             = $artifactdir"

    if [ ! -f "$artifactdir/$filename.pstotext.xml" ]; then
        [[ -d "$artifactdir" ]] || mkdir -p "$artifactdir"
        $totext -log $pdfFile.pstotext.log -timeout 30 -debug -nogzip -file $pdfFile 
        mv $pdfFile.pstotext.* "$artifactdir/"
    else
        echo "skipping already-processed $pdfFile"
    fi
}


# kludge: remove any pstotext tmp files that may be left in /tmp,
find /tmp -maxdepth 1 -type f -name 'ps2*'  -amin +2 -printf "removing temp file %f\n" -exec rm {} ';'

declare -a pdfs=(
EOF

  cat $f >> "sge-$f.sh"

  cat <<'EOF' >> "sge-$f.sh"
)

for pdf in ${pdfs[@]}
do
    # echo $pdf
    run_pstotext ${pdf}
done

EOF

  chmod 755 "sge-$f.sh"
  rm $f

done
