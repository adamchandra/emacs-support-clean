#!/bin/bash

BIN="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $BIN/common-defs.sh

find papers -type f \( -name "*.pdf" -o -name "*.ps" \) -a -not -name "._*" -printf "  \"%p\"\n" > $workdir/papers-to-process-pstotext.txt

cd $workdir

split -a 4 -d -l 5 papers-to-process-pstotext.txt run-pstotext.


for f in run-pstotext.*
do
  cat <<'EOF' > "sge-$f.sh"
#!/bin/bash

# --- interpreter
#$ -S /bin/sh
#
# --- run from current dir
#$ -cwd
#
# --- job name
#$ -N rexa.pstotext
#
# --- stdio redirection
#$ -e /dev/null
#$ -o /dev/null
#
# --- merge stdout/stderr?
#$ -j y
#
# --- pass on entire env
#$ -V

# need to get the actual location of bin dirs from config file (or rely on convention)
declare -r pstotext_bin="$pstotext_bin"
declare -r totext="$pstotext_bin/totext -debug -nogzip"

run_pstotext () {
    local pdfFile="$1"
    local path=$(dirname "$pdfFile")
    local filename=$(basename "$pdfFile")
    local artifactdir="${path}/${filename}.d/pstotext"
    local pstotext_artifact_base="$artifactdir/$filename"
    local fout="$pstotext_artifact_base.pstotext.xml"
    local ferr="$pstotext_artifact_base.pstotext.err"

    echo "path                   = $path        "
    echo "filename               = $filename    "
    echo "artifactdir            = $artifactdir "
    echo "pstotext_artifact_base = $pstotext_artifact_base"
    echo "fout = $fout"
    echo "ferr = $ferr"

    mkdir -p "$artifactdir"

    $totext -file $pdfFile

    mv $pdfFile.pstotext.* "$artifactdir/"
}


# kludge: remove any pstotext tmp files that may be left in /tmp,
find /tmp -maxdepth 1 -type f -name 'ps2*'  -amin +2 -printf "removing temp file %f\n" -exec rm {} ';'

declare -a pdfs=(
EOF

  cat $f >> "sge-$f.sh"

  cat <<'EOF' >> "sge-$f.sh"
)

for pdf in ${pdfs[@]}
do
    # echo $pdf
    run_pstotext ${pdf}
done

EOF

  rm $f

done
