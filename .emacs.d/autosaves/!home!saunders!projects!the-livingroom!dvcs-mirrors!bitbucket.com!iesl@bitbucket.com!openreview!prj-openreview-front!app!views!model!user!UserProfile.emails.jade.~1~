
- import play.api._
- import play.api.mvc._
- import java.io.UnsupportedEncodingException
- import java.net.URLEncoder

-@ val authProviders: Iterable[securesocial.core.IdentityProvider]
-@ val message: Option[String] = None
-@ val request: RequestHeader

-@ val it : model.user.UserProfile


. emails
  h5
    - it.primaryEmail.map(email=>
      | Contact at: #{email.email}
    - ).getOrElse(
      | No verified contact email
    - )
 
  ul.h-indent-ul
    li 
      h5 Additional emails
    - for (email <- it.nonPrimaryEmails; val encEmail = URLEncoder.encode(email.email, "UTF-8"))
      li
        ul.h-indent-ul
          li
            = email.email
 
            - if (!email.verified)
              li
                a.btn.ajax(
                  href={"/user/email/verify/"+encEmail}
                  data-replace={".user-emails"})
                  | Verify 
                | Send a verification email to this address
              li
                a.btn.ajax(
                  href={"/user/email/remove/"+encEmail}
                  data-replace={".user-emails"})
                  | Remove
                | Remove this email address
            - else
              li
                a.btn.ajax(
                  href={"/user/email/setprimary/"+encEmail}
                  data-replace={".user-emails"})
                  | Primary
                | Make this your primary contact email
              li
                a.btn.ajax(
                  href={"/user/email/verify/"+encEmail}
                  data-replace={".user-emails"})
                  | Reverify 
                | Re-send a verification email to this address
 
    li 
      form.ajax.form-inline(action="/user/email/add" method="POST" data-replace={".user-emails"})
        input(name="email" type="text" placeholder="add email")
        button.btn(type="submit") Add
